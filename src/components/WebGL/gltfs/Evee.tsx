/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 evee.glb -d -t -s 
*/

import * as THREE from "three";
import React from "react";
import { Outlines, useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Plane002_Material002_0: THREE.Mesh;
    Plane001_Material003_0: THREE.Mesh;
    Sphere001_Material001_0: THREE.Mesh;
    Plane_Material_0: THREE.Mesh;
  };
  materials: {
    ["Material.002"]: THREE.MeshStandardMaterial;
    ["Material.003"]: THREE.MeshStandardMaterial;
    ["Material.001"]: THREE.MeshStandardMaterial;
    ["Material.004"]: THREE.MeshStandardMaterial;
  };
};

export function Evee(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "./models/evee.glb",
  ) as GLTFResult;

  // @ts-ignore
  const toonMaterial = Object.fromEntries(
    Object.entries(materials).map(([key, value]) => {
      return [
        key,
        new THREE.MeshToonMaterial({
          color: value.color,
          side: THREE.DoubleSide,
          map: value.map,
        }),
      ];
    }),
  );

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane002_Material002_0.geometry}
        material={toonMaterial["Material.002"]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={0.153}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane001_Material003_0.geometry}
        material={toonMaterial["Material.003"]}
        position={[-0.107, 2.911, 1.727]}
        rotation={[-0.178, 0.029, -1.599]}
        scale={0.223}
      >
        <SharedOutline />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sphere001_Material001_0.geometry}
        material={toonMaterial["Material.001"]}
        position={[-0.057, 1.535, 1.936]}
        rotation={[-1.44, 0.015, 0.958]}
        scale={0.485}
      >
        <SharedOutline />
      </mesh>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Plane_Material_0.geometry}
        material={toonMaterial["Material.004"]}
        rotation={[0, 0, -Math.PI / 2]}
        scale={0.153}
      >
        <SharedOutline />
      </mesh>
    </group>
  );
}

useGLTF.preload("./models/evee.glb");
function SharedOutline() {
  // @ts-ignore
  return <Outlines thickness={0.05} color="black" />;
}
